-- MySQL Script generated by MySQL Workbench
-- Thu Dec  8 14:39:35 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema landervadminkami
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema landervadminkami
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `landervadminkami` DEFAULT CHARACTER SET utf8 ;
USE `landervadminkami` ;

-- -----------------------------------------------------
-- Table `landervadminkami`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`users` (
  `id_Users` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `confirmation_token` VARCHAR(45) NULL,
  `confirmed_at` DATETIME NULL,
  PRIMARY KEY (`id_Users`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `landervadminkami`.`List`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`List` (
  `idList` INT NOT NULL AUTO_INCREMENT,
  `name_liste` VARCHAR(45) NULL,
  `users_idusers` INT NOT NULL,
  PRIMARY KEY (`idList`),
  INDEX `fk_Liste_users_idx` (`users_idusers` ASC) ,
  CONSTRAINT `fk_Liste_users`
    FOREIGN KEY (`users_idusers`)
    REFERENCES `landervadminkami`.`users` (`id_Users`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `landervadminkami`.`Meal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`Meal` (
  `idMeal` INT NOT NULL AUTO_INCREMENT,
  `name_meal` VARCHAR(45) NULL,
  `alternative` VARCHAR(45) NULL,
  PRIMARY KEY (`idMeal`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `landervadminkami`.`ingredients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`ingredients` (
  `idIngredients` INT NOT NULL AUTO_INCREMENT,
  `name_ingredients` VARCHAR(45) NULL,
  PRIMARY KEY (`idIngredients`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `landervadminkami`.`ingredients_has_Meal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`ingredients_has_Meal` (
  `ingredients_idIngredients` INT NOT NULL,
  `Meal_idMeal` INT NOT NULL,
  PRIMARY KEY (`ingredients_idIngredients`, `Meal_idMeal`),
  INDEX `fk_ingredients_has_Meal_Meal1_idx` (`Meal_idMeal` ASC) ,
  INDEX `fk_ingredients_has_Meal_ingredients1_idx` (`ingredients_idIngredients` ASC) ,
  CONSTRAINT `fk_ingredients_has_Meal_ingredients1`
    FOREIGN KEY (`ingredients_idIngredients`)
    REFERENCES `landervadminkami`.`ingredients` (`idIngredients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ingredients_has_Meal_Meal1`
    FOREIGN KEY (`Meal_idMeal`)
    REFERENCES `landervadminkami`.`Meal` (`idMeal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `landervadminkami`.`ingredients_has_List`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `landervadminkami`.`ingredients_has_List` (
  `ingredients_idIngredients` INT NOT NULL,
  `List_idList` INT NOT NULL,
  PRIMARY KEY (`ingredients_idIngredients`, `List_idList`),
  INDEX `fk_ingredients_has_List_List1_idx` (`List_idList` ASC) ,
  INDEX `fk_ingredients_has_List_ingredients1_idx` (`ingredients_idIngredients` ASC) ,
  CONSTRAINT `fk_ingredients_has_List_ingredients1`
    FOREIGN KEY (`ingredients_idIngredients`)
    REFERENCES `landervadminkami`.`ingredients` (`idIngredients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ingredients_has_List_List1`
    FOREIGN KEY (`List_idList`)
    REFERENCES `landervadminkami`.`List` (`idList`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
